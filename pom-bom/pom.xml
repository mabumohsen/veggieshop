<?xml version="1.0" encoding="UTF-8"?>
<!--
  VeggieShop :: BOM / Parent POM (Enterprise-grade)
  - Java 21, Spring Boot 3.5.x (Servlet + Virtual Threads per PRD)
  - CI-friendly versions via -Drevision
  - Centralized dependency & plugin management (quality, security, reproducibility)
  - NOTE: Parent only (no <modules/>). Child modules should inherit this.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.3</version>
        <relativePath/>
    </parent>

    <!-- IMPORTANT: these three must match what children request -->
    <groupId>io.veggieshop</groupId>
    <artifactId>parent</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <name>VeggieShop :: BOM / Parent (Enterprise)</name>
    <description>Enterprise-grade parent BOM for VeggieShop modular-monolith (Spring Boot 3.x, Java 21)</description>
    <url>https://github.com/abuRizq/veggieshop-platform</url>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>abuRizq</id>
            <name>abuRizq</name>
            <email>mabumohsen2@smail.ucas.edu.ps</email>
            <timezone>+03:00</timezone>
            <roles>
                <role>owner</role>
                <role>maintainer</role>
            </roles>
        </developer>
    </developers>
    <modules>
        <module>../contexts/platform/problem-core</module>
        <module>../contexts/platform/platform-starter-search</module>
        <module>../contexts/platform/platform-starter-application</module>
    </modules>

    <issueManagement>
        <system>GitHub Issues</system>
        <url>https://github.com/abuRizq/veggieshop-platform/issues</url>
    </issueManagement>
    <ciManagement>
        <system>GitHub Actions</system>
        <url>https://github.com/abuRizq/veggieshop-platform/actions</url>
    </ciManagement>

    <!-- ========= Global Properties ========= -->
    <properties>
        <!-- CI-friendly versioning -->
        <revision>1.0.0-SNAPSHOT</revision>

        <!-- Java & encodings -->
        <java.version>21</java.version>
        <maven.compiler.release>${java.version}</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Spring ecosystem alignment -->
        <spring-boot.version>3.5.3</spring-boot.version>
        <spring-cloud.version>2025.0.0</spring-cloud.version>

        <!-- Library versions (pinned) -->
        <mapstruct.version>1.6.2</mapstruct.version>
        <lombok.version>1.18.34</lombok.version>
        <jjwt.version>0.12.6</jjwt.version>
        <flyway.version>10.17.0</flyway.version>
        <postgresql.version>42.7.4</postgresql.version>
        <hibernate-types.version>2.21.1</hibernate-types.version>
        <bucket4j.version>8.10.1</bucket4j.version>
        <opensearch.client.version>2.11.0</opensearch.client.version>
        <wiremock.version>3.13.1</wiremock.version>
        <testcontainers.version>1.20.3</testcontainers.version>
        <archunit.version>1.3.0</archunit.version>
        <jmh.version>1.37</jmh.version>
        <confluent.version>7.6.0</confluent.version>
        <otel.instrumentation.bom.version>2.8.0</otel.instrumentation.bom.version>
        <otel.core.version>1.39.0</otel.core.version>
        <otel.semconv.version>1.30.0</otel.semconv.version>
        <logstash.encoder.version>8.0</logstash.encoder.version>
        <problem.spring.version>2.6.0</problem.spring.version>
        <errorprone.annotations.version>2.27.0</errorprone.annotations.version>
        <quartz.version>2.3.2</quartz.version>

        <!-- HttpComponents 4.x (for OpenSearch low-level client) -->
        <httpclient4.version>4.5.14</httpclient4.version>
        <httpcore4.version>4.4.16</httpcore4.version>

        <!-- Plugin versions -->
        <maven.compiler.plugin.version>3.13.0</maven.compiler.plugin.version>
        <maven.surefire.plugin.version>3.3.1</maven.surefire.plugin.version>
        <maven.failsafe.plugin.version>3.3.1</maven.failsafe.plugin.version>
        <maven.jar.plugin.version>3.4.2</maven.jar.plugin.version>
        <maven.javadoc.plugin.version>3.10.0</maven.javadoc.plugin.version>
        <maven.source.plugin.version>3.3.1</maven.source.plugin.version>
        <maven.gpg.plugin.version>3.2.4</maven.gpg.plugin.version>
        <maven.enforcer.plugin.version>3.5.0</maven.enforcer.plugin.version>
        <maven.toolchains.plugin.version>3.1.0</maven.toolchains.plugin.version>
        <versions.plugin.version>2.17.1</versions.plugin.version>
        <spotless.plugin.version>2.43.0</spotless.plugin.version>
        <checkstyle.plugin.version>3.6.0</checkstyle.plugin.version>
        <checkstyle.tool.version>10.17.0</checkstyle.tool.version>
        <pmd.plugin.version>3.27.0</pmd.plugin.version>
        <spotbugs.plugin.version>4.8.6.4</spotbugs.plugin.version>
        <jacoco.plugin.version>0.8.12</jacoco.plugin.version>
        <owasp.plugin.version>10.0.3</owasp.plugin.version>
        <flatten.plugin.version>1.5.0</flatten.plugin.version>
        <cyclonedx.plugin.version>2.9.1</cyclonedx.plugin.version>
        <revapi.plugin.version>0.28.1</revapi.plugin.version>
        <pitest.plugin.version>1.17.0</pitest.plugin.version>
        <jmh.plugin.version>0.7.3</jmh.plugin.version>
        <protobuf.java.version>3.25.3</protobuf.java.version>

        <!-- Reproducible builds -->
        <project.build.outputTimestamp>${maven.build.timestamp}</project.build.outputTimestamp>
        <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ss'Z'</maven.build.timestamp.format>
        <extra.enforcer.rules.version>1.9.0</extra.enforcer.rules.version>

        <!-- Secrets from CI (optional) -->
        <nvdApiKey></nvdApiKey>
    </properties>

    <!-- ========= Dependency Management (BOMs + pins) ========= -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.veggieshop</groupId>
                <artifactId>internal-bom</artifactId>
                <version>${revision}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- OpenTelemetry BOMs -->
            <dependency>
                <groupId>io.opentelemetry.instrumentation</groupId>
                <artifactId>opentelemetry-instrumentation-bom</artifactId>
                <version>${otel.instrumentation.bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-bom</artifactId>
                <version>${otel.core.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Manage OTLP HTTP exporters so children can omit <version> -->
            <dependency>
                <groupId>io.opentelemetry</groupId>
                <artifactId>opentelemetry-exporter-otlp</artifactId>
                <version>${otel.core.version}</version>
            </dependency>

            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>5.11.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Pinned libs (managed here so modules can omit versions) -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>${jjwt.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId>
                <version>${jjwt.version}</version>
                <scope>runtime</scope>
            </dependency>

            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${flyway.version}</version>
            </dependency>

            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>

            <dependency>
                <groupId>com.vladmihalcea</groupId>
                <artifactId>hibernate-types-60</artifactId>
                <version>${hibernate-types.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.vladimir-bukhtoyarov</groupId>
                <artifactId>bucket4j-core</artifactId>
                <version>${bucket4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.opensearch.client</groupId>
                <artifactId>opensearch-java</artifactId>
                <version>${opensearch.client.version}</version>
            </dependency>

            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-avro-serializer</artifactId>
                <version>${confluent.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-protobuf-serializer</artifactId>
                <version>${confluent.version}</version>
            </dependency>

            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash.encoder.version}</version>
            </dependency>

            <dependency>
                <groupId>org.zalando</groupId>
                <artifactId>problem-spring-web-starter</artifactId>
                <version>${problem.spring.version}</version>
            </dependency>

            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${quartz.version}</version>
            </dependency>

            <dependency>
                <groupId>org.wiremock</groupId>
                <artifactId>wiremock</artifactId>
                <version>${wiremock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.tngtech.archunit</groupId>
                <artifactId>archunit-junit5</artifactId>
                <version>${archunit.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_annotations</artifactId>
                <version>${errorprone.annotations.version}</version>
            </dependency>

            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-core</artifactId>
                <version>${jmh.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-generator-annprocess</artifactId>
                <version>${jmh.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>com.nimbusds</groupId>
                <artifactId>nimbus-jose-jwt</artifactId>
                <version>9.37.3</version>
            </dependency>

            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-bom</artifactId>
                <version>${protobuf.java.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- OpenSearch low-level REST client + Apache HttpComponents 4.x -->
            <dependency>
                <groupId>org.opensearch.client</groupId>
                <artifactId>opensearch-rest-client</artifactId>
                <version>${opensearch.client.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>${httpcore4.version}</version>
            </dependency>

            <!-- Manage semconv version (not covered by core BOM) -->
            <dependency>
                <groupId>io.opentelemetry.semconv</groupId>
                <artifactId>opentelemetry-semconv</artifactId>
                <version>${otel.semconv.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- Minimal parent deps (tests only) -->
    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.26.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>5.12.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <!-- ========= Build ========= -->
    <build>
        <plugins>
            <!-- Enforcer -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven.enforcer.plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>extra-enforcer-rules</artifactId>
                        <version>${extra.enforcer.rules.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>enforce</id>
                        <phase>validate</phase>
                        <goals><goal>enforce</goal></goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion><version>[3.9.0,)</version></requireMavenVersion>
                                <requireJavaVersion><version>[${java.version},)</version></requireJavaVersion>
                                <requirePluginVersions/>
                                <dependencyConvergence/>
                                <banDuplicatePomDependencyVersions/>
                                <requireNoRepositories/>
                                <bannedDependencies>
                                    <excludes>
                                        <exclude>org.slf4j:slf4j-api:[1.0,2.0.0)</exclude>
                                        <exclude>ch.qos.logback:logback-classic:[1.0,1.3)</exclude>
                                    </excludes>
                                </bannedDependencies>
                            </rules>
                            <failFast>true</failFast>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Compiler -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <release>${maven.compiler.release}</release>
                    <parameters>true</parameters>
                    <compilerArgs>
                        <arg>-Xlint:all</arg>
                        <arg>-Xlint:-processing</arg>
                        <arg>-Werror</arg>
                    </compilerArgs>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-configuration-processor</artifactId>
                            <version>${spring-boot.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <!-- Tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
                <configuration>
                    <useSystemClassLoader>true</useSystemClassLoader>
                    <argLine>@{surefireArgLine}</argLine>
                    <redirectTestOutputToFile>false</redirectTestOutputToFile>
                    <reuseForks>true</reuseForks>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.plugin.version}</version>
                <executions>
                    <execution>
                        <id>it-phase</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <argLine>@{surefireArgLine}</argLine>
                </configuration>
            </plugin>

            <!-- JaCoCo -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.plugin.version}</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <phase>initialize</phase>
                        <goals><goal>prepare-agent</goal></goals>
                        <configuration>
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>verify</phase>
                        <goals><goal>report</goal></goals>
                    </execution>
                    <execution>
                        <id>check</id>
                        <phase>verify</phase>
                        <goals><goal>check</goal></goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.80</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Formatting & static analysis -->
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${spotless.plugin.version}</version>
                <executions>
                    <execution>
                        <id>spotless-check</id>
                        <phase>verify</phase>
                        <goals><goal>check</goal></goals>
                    </execution>
                </executions>
                <configuration>
                    <java>
                        <googleJavaFormat/>
                        <removeUnusedImports/>
                        <importOrder/>
                    </java>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${checkstyle.plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${checkstyle.tool.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>checkstyle</id>
                        <phase>verify</phase>
                        <goals><goal>check</goal></goals>
                    </execution>
                </executions>
                <configuration>
                    <configLocation>google_checks.xml</configLocation>
                    <failsOnError>true</failsOnError>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <consoleOutput>true</consoleOutput>
                    <linkXRef>false</linkXRef>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${pmd.plugin.version}</version>
                <configuration>
                    <rulesets>
                        <ruleset>category/java/bestpractices.xml</ruleset>
                        <ruleset>category/java/errorprone.xml</ruleset>
                        <ruleset>category/java/codestyle.xml</ruleset>
                    </rulesets>
                    <failOnViolation>false</failOnViolation>
                    <verbose>true</verbose>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs.plugin.version}</version>
                <executions>
                    <execution>
                        <id>spotbugs-check</id>
                        <phase>verify</phase>
                        <goals><goal>check</goal></goals>
                        <configuration>
                            <failOnError>true</failOnError>
                            <effort>Max</effort>
                            <threshold>Low</threshold>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Optional tools commented out (Revapi, OWASP, etc.) -->

            <!-- SBOM -->
            <plugin>
                <groupId>org.cyclonedx</groupId>
                <artifactId>cyclonedx-maven-plugin</artifactId>
                <version>${cyclonedx.plugin.version}</version>
            </plugin>

            <!-- Flatten -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${flatten.plugin.version}</version>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals><goal>flatten</goal></goals>
                        <configuration>
                            <flattenMode>oss</flattenMode>
                            <updatePomFile>true</updatePomFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>flatten-clean</id>
                        <phase>clean</phase>
                        <goals><goal>clean</goal></goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <!-- Pin default lifecycle plugins -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.3.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.12.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.jar.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven.enforcer.plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <!-- ========= Profiles ========= -->
    <profiles>
        <profile>
            <id>code-modules-only</id>
            <activation>
                <file><exists>src/main/java</exists></file>
            </activation>
            <build>
                <plugins>
                    <!-- Duplicate classes check -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>ban-duplicate-classes</id>
                                <phase>verify</phase>
                                <goals><goal>enforce</goal></goals>
                                <configuration>
                                    <rules>
                                        <banDuplicateClasses/>
                                    </rules>
                                    <failFast>true</failFast>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Require JDK 21 toolchain -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-toolchains-plugin</artifactId>
                        <version>${maven.toolchains.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>java-toolchain</id>
                                <phase>validate</phase>
                                <goals><goal>toolchain</goal></goals>
                            </execution>
                        </executions>
                        <configuration>
                            <toolchains>
                                <jdk>
                                    <version>${java.version}</version>
                                </jdk>
                            </toolchains>
                        </configuration>
                    </plugin>

                    <!-- Optional: OWASP Dependency-Check (enable in CI) -->
                    <!--
                    <plugin>
                      <groupId>org.owasp</groupId>
                      <artifactId>dependency-check-maven</artifactId>
                      <version>${owasp.plugin.version}</version>
                      <executions>
                        <execution>
                          <id>dependency-check-aggregate</id>
                          <phase>verify</phase>
                          <goals><goal>aggregate</goal></goals>
                        </execution>
                      </executions>
                      <configuration>
                        <nvdApiKey>${nvdApiKey}</nvdApiKey>
                        <failBuildOnAnyVulnerability>true</failBuildOnAnyVulnerability>
                      </configuration>
                    </plugin>
                    -->
                </plugins>
            </build>
        </profile>

        <!-- OSS release (if publishing) -->
        <profile>
            <id>oss-release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>${maven.gpg.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals><goal>sign</goal></goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <properties>
                <!-- <gpg.passphrase>${env.GPG_PASSPHRASE}</gpg.passphrase> -->
            </properties>
        </profile>
    </profiles>

    <scm>
        <connection>scm:git:https://github.com/abuRizq/veggieshop-platform.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/abuRizq/veggieshop-platform.git</developerConnection>
        <url>https://github.com/abuRizq/veggieshop-platform</url>
        <tag>HEAD</tag>
    </scm>
</project>
